version: "3"
services:
    # frontend container\search
    woistmeingeld:
        build: ./frontend
        ports:
            - 3000:3000
        container_name: frontend-docker
        restart: always
        links:
            - backend
        networks:
            - frontend

    # backend container
    backend:
        build: ./backend
        ports:
            - "${NODE_DOCKER_PORT-8080}:${NODE_DOCKER_PORT-8080}"
        container_name: backend-docker
        restart: always
        links:
            - db
        depends_on:
            - db
        # variables from .env file passed down to container
        environment:
            - MYSQL_HOST=${MYSQL_HOST-localhost}
            - MYSQL_PORT=${MYSQL_PORT-3306}
            - MYSQL_USER
            - MYSQL_PASSWORD
            - MYSQL_DB_NAME
            - PORT=${NODE_DOCKER_PORT}
            - CLIENT_ORIGIN
        networks:
            - frontend
            - backend

    # database container
    db:
        image: mysql
        command: --default-authentication-plugin=mysql_native_password
        ports:
            - "${MYSQL_PORT-3306}:${MYSQL_PORT-3306}"
        container_name: database-docker
        restart: always
        # necessary to fix a sql db error
        security_opt:
            - seccomp:unconfined
        # variables from .env file passed down to container
        environment:
            - MYSQL_ROOT_PASSWORD
            - MYSQL_USER
            - MYSQL_PASSWORD
            - MYSQL_HOST
            - MYSQL_DATABASE=${MYSQL_DB_NAME}
        volumes:
            # "hostpath:containerpath" renaming is important as files will be executed in order
            - "./db/schema.sql:/docker-entrypoint-initdb.d/1.sql"
            - "./db/data.sql:/docker-entrypoint-initdb.d/2.sql"
        networks:
            - backend

networks:
    backend:
    frontend:
